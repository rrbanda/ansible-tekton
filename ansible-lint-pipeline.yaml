apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: ansible-lint-pipeline
spec:
  params:
    - name: git-url
      type: string
    - name: git-revision
      type: string
      default: dev
    - name: target-repo-url
      type: string
    - name: pr-base-branch
      type: string
    - name: target-branch
      type: string
  workspaces:
    - name: shared-workspace
  tasks:
    - name: clone-source
      taskRef:
        name: git-clone
        kind: ClusterTask
      params:
        - name: url
          value: $(params.git-url)
        - name: revision
          value: $(params.git-revision)
      workspaces:
        - name: output
          workspace: shared-workspace

    - name: lint-ansible
      runAfter: [clone-source]
      taskSpec:
        workspaces:
          - name: shared-workspace
        steps:
          - name: lint
            image: python:3.11
            workingDir: $(workspaces.shared-workspace.path)
            script: |
              pip install --no-cache-dir ansible-lint
              echo "üîç Linting playbooks..."
              mkdir -p passed failed
              for file in samples/*.yml; do
                echo "üìÇ Checking $file"
                if ansible-lint "$file"; then
                  cp "$file" passed/
                else
                  cp "$file" failed/
                fi
              done
              echo "‚úÖ Passed:" && ls passed/ || true
              echo "‚ùå Failed:" && ls failed/ || true

    - name: promote-playbook
      runAfter: [lint-ansible]
      taskRef:
        name: promote-playbook
      params:
        - name: target-repo-url
          value: $(params.target-repo-url)
        - name: pr-base-branch
          value: $(params.pr-base-branch)
        - name: target-branch
          value: $(params.target-branch)
      workspaces:
        - name: shared
          workspace: shared-workspace

    - name: sync-prod-to-main
      runAfter: [promote-playbook]
      when:
        - input: "$(params.target-branch)"
          operator: in
          values: ["prod"]
      taskRef:
        name: sync-prod-to-main
      workspaces:
        - name: shared
          workspace: shared-workspace
