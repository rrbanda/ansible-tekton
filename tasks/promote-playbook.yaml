apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: promote-playbook
spec:
  params:
    - name: target-repo-url
      type: string
    - name: pr-base-branch
      type: string
    - name: target-branch
      type: string
      default: stage
  workspaces:
    - name: shared
  steps:
    - name: promote
      image: debian:bullseye
      workingDir: $(workspaces.shared.path)
      env:
        - name: GITHUB_TOKEN
          valueFrom:
            secretKeyRef:
              name: github-creds
              key: token
      script: |
        #!/bin/bash
        set -e

        echo "üì¶ Installing dependencies..."
        apt-get update -qq
        apt-get install -y git curl jq tar

        echo "‚¨áÔ∏è Installing gh CLI..."
        GH_VERSION=$(curl -s https://api.github.com/repos/cli/cli/releases/latest | jq -r .tag_name)
        curl -L https://github.com/cli/cli/releases/download/${GH_VERSION}/gh_${GH_VERSION#v}_linux_amd64.tar.gz -o gh.tgz
        tar -xzf gh.tgz
        cp gh_${GH_VERSION#v}_linux_amd64/bin/gh /usr/local/bin/
        chmod +x /usr/local/bin/gh

        echo "üîê Cloning repo using token..."
        mkdir -p promote && cd promote
        git config --global user.email "tekton@example.com"
        git config --global user.name "tekton"
        git clone https://oauth2:${GITHUB_TOKEN}@github.com/rrbanda/ansible-tekton.git .
        
        echo "üîÑ Syncing with latest $(params.pr-base-branch)..."
        git checkout "$(params.pr-base-branch)"
        git pull origin "$(params.pr-base-branch)"

        BRANCH=promote-$(date +%s)
        git checkout -b $BRANCH
        mkdir -p promoted

        echo "üì• Copying playbooks that passed lint..."
        cp -r ../passed/*.yml promoted/ || true

        echo "üßæ Generating lint-summary.md..."
        echo "# Lint Summary Report" > lint-summary.md
        echo "" >> lint-summary.md
        echo "| Playbook | Status |" >> lint-summary.md
        echo "|----------|--------|" >> lint-summary.md

        PASS_NAMES=""
        for file in ../passed/*.yml; do
          [ -e "$file" ] || continue
          fname=$(basename "$file")
          echo "| $fname | ‚úÖ Passed |" >> lint-summary.md
          PASS_NAMES="$PASS_NAMES $fname"
        done

        for file in ../failed/*.yml; do
          [ -e "$file" ] || continue
          fname=$(basename "$file")
          echo "| $fname | ‚ùå Failed |" >> lint-summary.md
        done

        echo "" >> lint-summary.md
        echo "_Auto-generated by Tekton at $(date)_" >> lint-summary.md

        git add promoted/ lint-summary.md
        git commit -m "Promoted clean playbooks + lint summary"
        git push https://oauth2:${GITHUB_TOKEN}@github.com/rrbanda/ansible-tekton.git $BRANCH

        echo "üì§ Creating pull request to $(params.pr-base-branch)..."
        if [ "$(params.target-branch)" = "stage" ]; then
          PR_TITLE="Auto PR: Promote playbooks (${PASS_NAMES})"
        else
          PR_TITLE="Promote to Prod: Final review for playbooks (${PASS_NAMES})"
        fi

        gh auth setup-git
        gh pr create \
          --base "$(params.pr-base-branch)" \
          --head "$BRANCH" \
          --title "$PR_TITLE" \
          --body "‚úÖ Promoted playbooks: ${PASS_NAMES}\nüìù Includes lint-summary.md\n\nThis PR was auto-generated by Tekton."

        if [ "$(params.target-branch)" = "stage" ]; then
          echo "‚úÖ Attempting auto-merge into stage..."
          PR_URL=$(gh pr list --head "$BRANCH" --json url -q '.[0].url')
          gh pr merge "$PR_URL" --merge --admin || echo "‚ö†Ô∏è Auto-merge failed"
        else
          echo "üîí PR created for prod. Manual review required."
        fi
